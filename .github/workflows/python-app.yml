# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .[dev]
    - name: Run tox
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        TELEGRAPH_TOKEN: ${{ secrets.TELEGRAPH_TOKEN }}
        GENIUS_TOKEN: ${{ secrets.GENIUS_TOKEN }}
        ANNOTATIONS_CHANNEL_HANDLE: ${{ secrets.ANNOTATIONS_CHANNEL_HANDLE }}
        DEVELOPERS: ${{ secrets.DEVELOPERS }}
        SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
        TELETHON_API_ID: ${{ secrets.TELETHON_API_ID }}
        TELETHON_API_HASH: ${{ secrets.TELETHON_API_HASH }}
        TELETHON_SESSION_STRING: ${{ secrets.TELETHON_SESSION_STRING }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GENIUS_CLIENT_ID: ${{ secrets.GENIUS_CLIENT_ID }}
        GENIUS_REDIRECT_URI: ${{ secrets.GENIUS_REDIRECT_URI }}
        GENIUS_CLIENT_SECRET: ${{ secrets.GENIUS_CLIENT_SECRET }}
      run: tox

    - name: Set ENV for codeclimate
      run: |
        echo "{GIT_BRANCH}={$GITHUB_REF}" >> $GITHUB_ENV
        echo "{GIT_COMMIT_SHA}={$GITHUB_SHA}" >> $GITHUB_ENV
      if: github.event_name == 'push'


    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage.json
      if: github.event_name == 'push'